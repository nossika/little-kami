{"version":3,"sources":["webpack:///main.da38231f57953578359f.js","webpack:///./src/kami/node.js","webpack:///./src/kami/config.js","webpack:///./src/example/grids.js","webpack:///./src/example/index.js","webpack:///./src/kami/index.js","webpack:///./src/kami/kami-extend.js","webpack:///./src/kami/kami-core.js"],"names":["webpackJsonp","128","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","undefined","_set","_set2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","Node","type","this","color","line","_linkNodes","key","_this","_len","arguments","length","nodes","Array","_key","filter","node","forEach","has","add","_this2","_len2","_key2","delete","129","defaultLines","1","2","3","4","5","6","defaultColors","130","grids","limit","styles","colors","lines","65","initPage","_gridsData$gridsIndex","_grids2","gridsIndex","_gridsData$gridsIndex2","kami","_kami2","canvasContainerEl","document","querySelector","colorsContainerEl","tipContainerEl","innerHTML","types","curType","colorsEl","slice","call","querySelectorAll","el","addEventListener","e","classList","remove","dataset","click","canvasEl","getNodeByOffset","offsetX","offsetWidth","offsetY","offsetHeight","tap","onEnd","_ref","result","tapCount","setTimeout","alert","reset","delay","mount","_kami","_grids","66","_kamiExtend","_kamiExtend2","67","_typeof2","_typeof3","_getPrototypeOf","_getPrototypeOf2","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_kamiCore","_kamiCore2","Kami","_KamiCore","__proto__","apply","canvas","_inBrowser","_canvas","setStyles","render","_ref2","nodeGrids","row","canvasWidth","width","canvasHeight","height","ctx","getContext","gridXLen","gridYLen","nodeWidth","nodeHeight","clearRect","rowData","y","x","reverse","beginPath","moveTo","lineTo","fillStyle","fill","strokeStyle","stroke","closePath","percentX","percentY","areaWidth","areaHeight","areaX","areaOffsetXPercent","areaY","areaOffsetYPercent","isUpHalf","99","initData","nodeTypeMap","_originGrids","map","nodeType","_node2","_defineProperties2","getNode","enumerable","link","_tapCount","_keys2","typeStr","_class","_temp","_getIterator2","_getIterator3","_weakSet","_weakSet2","_keys","_defineProperties","_node","_config","KamiCore","_ref$canvas","_ref$colors","_ref$lines","Error","targetType","originalType","traveledNodes","spread","nextNodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","linkNode","err","return","size","checkConsistency","arr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3"],"mappings":"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","file":"main.da38231f57953578359f.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _set = __webpack_require__(60);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _classCallCheck2 = __webpack_require__(40);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(41);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Node = function () {\n    function Node(type) {\n        (0, _classCallCheck3.default)(this, Node);\n\n        this.type = type;\n        this.color = '';\n        this.line = '';\n        this._linkNodes = new _set2.default();\n    }\n\n    (0, _createClass3.default)(Node, [{\n        key: 'link',\n        value: function link() {\n            var _this = this;\n\n            if (!this.type) return;\n\n            for (var _len = arguments.length, nodes = Array(_len), _key = 0; _key < _len; _key++) {\n                nodes[_key] = arguments[_key];\n            }\n\n            nodes.filter(function (node) {\n                return node && node instanceof Node && node.type;\n            }).forEach(function (node) {\n                if (_this._linkNodes.has(node)) return; // if node already linked, do nothing\n                _this._linkNodes.add(node);\n                node._linkNodes.add(_this);\n            });\n        }\n    }, {\n        key: 'unlink',\n        value: function unlink() {\n            var _this2 = this;\n\n            for (var _len2 = arguments.length, nodes = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                nodes[_key2] = arguments[_key2];\n            }\n\n            nodes.filter(function (node) {\n                return node && node instanceof Node && node.type;\n            }).forEach(function (node) {\n                _this2._linkNodes.delete(node);\n                node._linkNodes.delete(_this2);\n            });\n        }\n    }]);\n    return Node;\n}();\n\nexports.default = Node;\n\n/***/ }),\n\n/***/ 129:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar defaultLines = exports.defaultLines = {\n    '1': 'rgba(156,50,72,.4)',\n    '2': 'rgba(138,197,167,.4)',\n    '3': 'rgba(197,123,50,.4)',\n    '4': 'rgba(24,52,64,.4)',\n    '5': 'rgba(203,102,60,.4)',\n    '6': 'rgba(202,192,164,.4)'\n};\n\nvar defaultColors = exports.defaultColors = {\n    '1': 'rgba(156,50,72,1)',\n    '2': 'rgba(138,197,167,1)',\n    '3': 'rgba(197,123,50,1)',\n    '4': 'rgba(24,52,64,1)',\n    '5': 'rgba(203,102,60,1)',\n    '6': 'rgba(202,192,164,1)'\n};\n\n/***/ }),\n\n/***/ 130:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = [\n// { // 0\n//     grids: [\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//     ],\n//     limit: 1,\n// },\n{ // 1\n    grids: [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 2, 2, 2, 2, 1, 1, 1], [1, 1, 2, 2, 3, 3, 2, 2, 1, 1], [1, 2, 2, 3, 3, 3, 3, 2, 2, 1], [1, 2, 3, 3, 2, 2, 3, 3, 2, 1], [1, 2, 3, 2, 2, 2, 2, 3, 2, 1], [1, 2, 3, 2, 1, 1, 2, 3, 2, 1], [1, 2, 3, 2, 1, 1, 2, 3, 2, 1], [1, 2, 3, 2, 1, 1, 2, 3, 2, 1], [1, 2, 3, 2, 2, 2, 2, 3, 2, 1], [1, 2, 3, 3, 2, 2, 3, 3, 2, 1], [1, 2, 2, 3, 3, 3, 3, 2, 2, 1], [1, 1, 2, 2, 3, 3, 2, 2, 1, 1], [1, 1, 1, 2, 2, 2, 2, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 3, 3, 1, 1], [1, 2, 2, 1, 1, 3, 3, 3, 3, 1], [1, 2, 2, 1, 1, 3, 2, 2, 3, 1], [1, 2, 2, 1, 1, 3, 2, 2, 3, 1], [1, 1, 1, 1, 1, 3, 2, 2, 3, 1], [1, 1, 1, 1, 1, 3, 3, 3, 3, 1], [1, 1, 1, 1, 1, 1, 3, 3, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]],\n    limit: 4,\n    styles: {\n        colors: {\n            '1': 'rgba(152,52,61,1)',\n            '2': 'rgba(91,143,116,1)',\n            '3': 'rgba(201,184,158,1)'\n        },\n        lines: {\n            '1': 'rgba(152,52,61,.4)',\n            '2': 'rgba(91,143,116,.4)',\n            '3': 'rgba(201,184,158,.4)'\n        }\n    }\n}, { // 2\n    grids: [[1, 2, 2, 3, 1, 1, 2, 2, 3, 1], [1, 2, 2, 3, 1, 1, 2, 2, 3, 1], [1, 2, 2, 3, 1, 1, 3, 2, 3, 1], [1, 3, 2, 3, 1, 1, 3, 3, 3, 1], [1, 3, 3, 3, 1, 1, 3, 3, 3, 1], [1, 3, 3, 3, 1, 1, 3, 2, 3, 1], [4, 3, 3, 3, 1, 1, 3, 2, 2, 1], [4, 4, 3, 3, 1, 1, 3, 2, 2, 1], [1, 4, 4, 3, 1, 1, 3, 2, 2, 1], [1, 2, 4, 4, 1, 1, 3, 3, 2, 1], [1, 2, 2, 4, 4, 1, 3, 3, 3, 1], [1, 2, 2, 3, 4, 4, 3, 3, 3, 1], [4, 2, 2, 3, 1, 4, 2, 3, 3, 1], [4, 4, 2, 3, 1, 1, 2, 2, 3, 1], [2, 4, 3, 3, 1, 1, 2, 2, 3, 1], [2, 3, 3, 3, 1, 1, 2, 2, 3, 4], [2, 3, 3, 3, 2, 1, 3, 2, 3, 4], [2, 2, 3, 3, 2, 4, 3, 3, 3, 1], [1, 2, 2, 3, 2, 4, 4, 3, 3, 1], [1, 2, 2, 3, 2, 2, 4, 2, 3, 1], [1, 2, 2, 3, 2, 2, 2, 2, 4, 1], [1, 3, 2, 3, 2, 2, 2, 2, 4, 4], [1, 3, 3, 3, 1, 2, 2, 2, 2, 4], [1, 3, 3, 3, 1, 1, 2, 2, 2, 2], [1, 3, 2, 3, 1, 1, 3, 2, 2, 2], [1, 3, 2, 2, 1, 1, 3, 3, 2, 2], [1, 3, 2, 2, 1, 1, 3, 3, 3, 2], [1, 3, 2, 2, 1, 1, 3, 3, 3, 4], [1, 3, 3, 2, 1, 1, 3, 3, 3, 4]],\n    limit: 5,\n    styles: {\n        colors: {\n            '1': 'rgba(209,197,171,1)',\n            '2': 'rgba(205,104,62,1)',\n            '3': 'rgba(37,60,66,1)',\n            '4': 'rgba(88,172,156,1)'\n        },\n        lines: {\n            '1': 'rgba(209,197,171,.4)',\n            '2': 'rgba(205,104,62,.4)',\n            '3': 'rgba(37,60,66,.4)',\n            '4': 'rgba(88,172,156,.4)'\n        }\n    }\n}, { // 3\n    grids: [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 2, 1, 1], [1, 3, 1, 1, 1, 1, 2, 2, 1, 1], [1, 3, 3, 1, 1, 2, 2, 2, 1, 1], [1, 3, 3, 3, 1, 1, 2, 2, 1, 1], [1, 3, 1, 3, 3, 1, 1, 2, 1, 1], [1, 3, 1, 1, 3, 3, 1, 1, 1, 1], [1, 3, 1, 1, 1, 3, 3, 1, 1, 1], [1, 3, 1, 4, 1, 1, 3, 3, 1, 1], [1, 3, 1, 2, 4, 1, 1, 3, 3, 1], [1, 3, 1, 4, 1, 1, 3, 3, 1, 1], [1, 3, 1, 1, 1, 3, 3, 1, 1, 1], [1, 3, 1, 1, 3, 3, 1, 1, 4, 1], [1, 3, 1, 3, 3, 1, 1, 4, 4, 1], [1, 3, 3, 3, 1, 1, 4, 1, 4, 1], [1, 3, 3, 1, 1, 4, 4, 1, 1, 1], [1, 3, 1, 1, 4, 4, 1, 1, 4, 1], [1, 1, 1, 4, 1, 1, 3, 1, 4, 1], [1, 1, 4, 4, 1, 1, 4, 3, 4, 1], [1, 1, 1, 4, 1, 1, 3, 1, 4, 1], [1, 1, 1, 1, 4, 4, 1, 1, 4, 1], [1, 1, 3, 1, 1, 4, 4, 1, 1, 1], [1, 1, 1, 3, 1, 1, 4, 1, 4, 1], [1, 1, 3, 1, 1, 1, 1, 4, 4, 1], [1, 1, 1, 1, 1, 1, 1, 1, 4, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]],\n    limit: 5,\n    styles: {\n        colors: {\n            '1': 'rgba(64,132,109,1)',\n            '2': 'rgba(207,167,69,1)',\n            '3': 'rgba(209,110,53,1)',\n            '4': 'rgba(37,63,89,1)'\n        },\n        lines: {\n            '1': 'rgba(64,132,109,.4)',\n            '2': 'rgba(207,167,69,.4)',\n            '3': 'rgba(209,110,53,.4)',\n            '4': 'rgba(37,63,89,.4)'\n        }\n    }\n}, { // 4\n    grids: [[2, 2, 3, 1, 4, 4, 1, 3, 3, 3], [2, 2, 3, 1, 4, 4, 1, 3, 3, 3], [3, 3, 3, 1, 1, 1, 1, 3, 3, 3], [3, 3, 4, 4, 1, 1, 2, 2, 3, 3], [1, 4, 4, 4, 4, 2, 2, 2, 2, 1], [1, 4, 4, 4, 4, 2, 3, 3, 2, 1], [1, 4, 4, 4, 4, 2, 3, 3, 2, 1], [1, 4, 4, 4, 4, 2, 3, 3, 2, 1], [1, 4, 4, 4, 4, 2, 2, 2, 2, 1], [3, 3, 4, 4, 1, 1, 2, 2, 1, 1], [3, 3, 3, 1, 1, 1, 1, 1, 1, 1], [1, 1, 3, 1, 3, 3, 1, 1, 1, 1], [1, 1, 3, 1, 3, 3, 1, 1, 1, 1], [1, 1, 3, 1, 3, 3, 1, 1, 1, 1], [3, 3, 3, 1, 1, 1, 1, 1, 1, 1], [3, 3, 2, 2, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 1, 1, 1, 4], [1, 2, 3, 3, 2, 1, 2, 2, 1, 4], [1, 2, 3, 3, 2, 1, 2, 2, 1, 4], [1, 2, 3, 3, 2, 1, 2, 2, 1, 4], [1, 2, 2, 2, 2, 1, 1, 1, 1, 4], [1, 1, 2, 2, 3, 3, 1, 1, 1, 1], [1, 1, 1, 3, 3, 3, 3, 1, 1, 1], [2, 2, 1, 3, 4, 4, 3, 1, 3, 3], [2, 2, 1, 3, 4, 4, 3, 1, 3, 3], [2, 2, 1, 3, 4, 4, 3, 1, 3, 3], [1, 1, 1, 3, 3, 3, 3, 1, 1, 1], [1, 1, 1, 1, 3, 3, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]],\n    limit: 5,\n    styles: {\n        colors: {\n            '1': 'rgba(22,50,62,1)',\n            '2': 'rgba(137,196,166,1)',\n            '3': 'rgba(200,126,53,1)',\n            '4': 'rgba(154,48,70,1)'\n        },\n        lines: {\n            '1': 'rgba(22,50,62,.4)',\n            '2': 'rgba(137,196,166,.4)',\n            '3': 'rgba(200,126,53,.4)',\n            '4': 'rgba(154,48,70,.4)'\n        }\n    }\n}];\n\n/***/ }),\n\n/***/ 65:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _kami = __webpack_require__(66);\n\nvar _kami2 = _interopRequireDefault(_kami);\n\nvar _grids = __webpack_require__(130);\n\nvar _grids2 = _interopRequireDefault(_grids);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// const Kami = require('../kami');\nvar gridsIndex = 0;\n\nfunction initPage() {\n    var _gridsData$gridsIndex = _grids2.default[gridsIndex],\n        grids = _gridsData$gridsIndex.grids,\n        limit = _gridsData$gridsIndex.limit,\n        _gridsData$gridsIndex2 = _gridsData$gridsIndex.styles,\n        styles = _gridsData$gridsIndex2 === undefined ? {} : _gridsData$gridsIndex2;\n\n    var kami = new _kami2.default({\n        grids: grids,\n        colors: styles.colors,\n        lines: styles.lines\n    });\n    var canvasContainerEl = document.querySelector('#canvas-wrapper');\n    var colorsContainerEl = document.querySelector('#colors-wrapper');\n    var tipContainerEl = document.querySelector('#tips-wrapper');\n\n    canvasContainerEl.innerHTML = '<canvas class=\"canvas\" width=\"300\" height=\"500\"></canvas>';\n\n    colorsContainerEl.innerHTML = '';\n    kami.types.forEach(function (type) {\n        colorsContainerEl.innerHTML += '<span\\n            data-type=\"' + type + '\" \\n            class=\"color\"\\n            style=\"background: ' + kami.colors[type] + '; border: 3px solid ' + kami.lines[type] + '\"\\n        ></span>';\n    });\n\n    tipContainerEl.innerHTML = '<div>\\u8BF7\\u5728' + limit + '\\u6B65\\u4E4B\\u5185\\u5B8C\\u6210</div>';\n\n    var curType = void 0;\n    var colorsEl = [].slice.call(colorsContainerEl.querySelectorAll('[data-type]'));\n    colorsEl.forEach(function (el) {\n        el.addEventListener('click', function (e) {\n            colorsEl.forEach(function (el) {\n                el.classList.remove('selected');\n            });\n            this.classList.add('selected');\n            curType = +this.dataset.type;\n        });\n    });\n    colorsContainerEl.querySelector('[data-type]').click();\n\n    var canvasEl = canvasContainerEl.querySelector('canvas');\n\n    canvasEl.addEventListener('click', function (e) {\n        var node = kami.getNodeByOffset(e.offsetX / canvasEl.offsetWidth, e.offsetY / canvasEl.offsetHeight);\n\n        kami.tap(node, curType, {\n            onEnd: function onEnd(_ref) {\n                var result = _ref.result,\n                    tapCount = _ref.tapCount;\n\n                if (result) {\n                    gridsIndex++;\n                    if (gridsIndex >= _grids2.default.length) {\n                        setTimeout(function () {\n                            alert('\\u5DF2\\u901A\\u8FC7\\u6240\\u6709\\u5173\\u5361~\\uFF01');\n                        }, 50);\n                        return;\n                    }\n                    setTimeout(function () {\n                        alert('\\u901A\\u8FC7~\\uFF01\\uFF08\\u5F53\\u524D\\u8FDB\\u5EA6\\uFF1A' + gridsIndex + '/' + _grids2.default.length + '\\uFF09');\n                    }, 50);\n                    initPage();\n                } else if (tapCount >= limit) {\n                    setTimeout(function () {\n                        alert('\\u5931\\u8D25...\\u522B\\u7070\\u5FC3\\uFF0C\\u518D\\u8BD5\\u4E00\\u4E0B');\n                    }, 50);\n                    kami.reset();\n                }\n            },\n\n            delay: 100\n        });\n    });\n\n    kami.mount(canvasEl);\n}\n\ninitPage();\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _kamiExtend = __webpack_require__(67);\n\nvar _kamiExtend2 = _interopRequireDefault(_kamiExtend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _kamiExtend2.default;\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _typeof2 = __webpack_require__(24);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getPrototypeOf = __webpack_require__(84);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(40);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(41);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(90);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(91);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _kamiCore = __webpack_require__(99);\n\nvar _kamiCore2 = _interopRequireDefault(_kamiCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Kami = function (_KamiCore) {\n    (0, _inherits3.default)(Kami, _KamiCore);\n\n    function Kami() {\n        (0, _classCallCheck3.default)(this, Kami);\n        return (0, _possibleConstructorReturn3.default)(this, (Kami.__proto__ || (0, _getPrototypeOf2.default)(Kami)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(Kami, [{\n        key: 'mount',\n\n        // 挂载到canvas并自动渲染\n        value: function mount(canvas) {\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                colors = _ref.colors,\n                lines = _ref.lines;\n\n            this._inBrowser = true;\n            this._canvas = canvas;\n            colors = colors || this.colors || Kami.defaultColors;\n            lines = lines || this.lines || Kami.defaultLines;\n            this.setStyles({ colors: colors, lines: lines });\n            this.render();\n        }\n\n        // 改变节点样式\n\n    }, {\n        key: 'setStyles',\n        value: function setStyles(_ref2) {\n            var _this2 = this;\n\n            var node = _ref2.node,\n                colors = _ref2.colors,\n                lines = _ref2.lines;\n\n            this.colors = colors || this.colors;\n            this.lines = lines || this.lines;\n            if (node) {\n                node.color = this.colors[node.type] || '';\n                node.line = (0, _typeof3.default)(this.lines) === 'object' ? this.lines[node.type] : node.type ? this.lines : '';\n            } else {\n                this.nodeGrids.forEach(function (row) {\n                    row.forEach(function (node) {\n                        node.color = _this2.colors[node.type] || '';\n                        node.line = (0, _typeof3.default)(_this2.lines) === 'object' ? _this2.lines[node.type] : node.type ? _this2.lines : '';\n                    });\n                });\n            }\n        }\n\n        // 渲染到canvas\n\n    }, {\n        key: 'render',\n        value: function render() {\n            if (!this._canvas) return;\n            var nodeGrids = this.nodeGrids,\n                _canvas = this._canvas;\n\n\n            var canvasWidth = _canvas.width;\n            var canvasHeight = _canvas.height;\n            var ctx = _canvas.getContext('2d');\n            var gridXLen = nodeGrids[0].length;\n            var gridYLen = nodeGrids.length;\n            var nodeWidth = canvasWidth / gridXLen;\n            var nodeHeight = canvasHeight / ((gridYLen - 1) / 2) / 2;\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            nodeGrids.forEach(function (rowData, y) {\n                rowData.forEach(function (node, x) {\n                    var reverse = x + y & 1;\n                    ctx.beginPath();\n                    if (!reverse) {\n                        ctx.moveTo(nodeWidth * x, nodeHeight * (y - 1));\n                        ctx.lineTo(nodeWidth * (x + 1), nodeHeight * y);\n                        ctx.lineTo(nodeWidth * x, nodeHeight * (y + 1));\n                        ctx.lineTo(nodeWidth * x, nodeHeight * (y - 1));\n                    } else {\n                        ctx.moveTo(nodeWidth * x, nodeHeight * y);\n                        ctx.lineTo(nodeWidth * (x + 1), nodeHeight * (y - 1));\n                        ctx.lineTo(nodeWidth * (x + 1), nodeHeight * (y + 1));\n                        ctx.lineTo(nodeWidth * x, nodeHeight * y);\n                    }\n\n                    ctx.fillStyle = node.color;\n                    node.color && ctx.fill();\n                    ctx.strokeStyle = node.line;\n                    node.line && ctx.stroke();\n                    ctx.closePath();\n                });\n            });\n        }\n\n        // 根据坐标获取节点\n\n    }, {\n        key: 'getNodeByOffset',\n        value: function getNodeByOffset(percentX, percentY) {\n            var areaWidth = 1 / this.nodeGrids[0].length;\n            var areaHeight = 1 / (this.nodeGrids.length - 1);\n\n            var areaX = percentX / areaWidth | 0;\n            var areaOffsetXPercent = percentX / areaWidth - areaX;\n            var areaY = percentY / areaHeight | 0;\n            var areaOffsetYPercent = 1 - (percentY / areaHeight - areaY);\n\n            var isUpHalf = areaX + areaY & 1 ? 1 - areaOffsetXPercent < areaOffsetYPercent : areaOffsetXPercent < areaOffsetYPercent;\n\n            var x = areaX;\n            var y = isUpHalf ? areaY : areaY + 1;\n            return this.nodeGrids[y][x];\n        }\n    }]);\n    return Kami;\n}(_kamiCore2.default);\n\nexports.default = Kami;\n\n\nmodule.exports = Kami;\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _getIterator2 = __webpack_require__(100);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _set = __webpack_require__(60);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _weakSet = __webpack_require__(116);\n\nvar _weakSet2 = _interopRequireDefault(_weakSet);\n\nvar _classCallCheck2 = __webpack_require__(40);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(41);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _keys = __webpack_require__(122);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _defineProperties = __webpack_require__(125);\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _class, _temp;\n\nvar _node = __webpack_require__(128);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _config = __webpack_require__(129);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction initData() {\n    var nodeTypeMap = {};\n    var nodeGrids = this._originGrids.map(function (row) {\n        return row.map(function (nodeType) {\n            nodeTypeMap[nodeType] = true;\n            return new _node2.default(nodeType);\n        });\n    });\n\n    (0, _defineProperties2.default)(nodeGrids, {\n        getNode: {\n            value: function value(x, y) {\n                return this[y] && this[y][x] || null;\n            },\n\n            enumerable: false\n        }\n    });\n\n    // 处理各节点的链接关系\n    nodeGrids.forEach(function (row, y) {\n        row.forEach(function (node, x) {\n            node.link(nodeGrids.getNode(x, y - 1), nodeGrids.getNode(x, y + 1), nodeGrids.getNode(x + (x + y & 1 ? 1 : -1), y));\n        });\n    });\n\n    this.nodeGrids = nodeGrids;\n    this._tapCount = 0;\n    this.types = (0, _keys2.default)(nodeTypeMap).map(function (typeStr) {\n        return +typeStr;\n    }).filter(function (type) {\n        return type;\n    });\n\n    if (this._canvas) {\n        typeof this.mount === 'function' && this.mount(this._canvas);\n    }\n}\n\nvar KamiCore = (_temp = _class = function () {\n    function KamiCore() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$canvas = _ref.canvas,\n            canvas = _ref$canvas === undefined ? null : _ref$canvas,\n            grids = _ref.grids,\n            _ref$colors = _ref.colors,\n            colors = _ref$colors === undefined ? KamiCore.defaultColors : _ref$colors,\n            _ref$lines = _ref.lines,\n            lines = _ref$lines === undefined ? KamiCore.defaultLines : _ref$lines;\n\n        (0, _classCallCheck3.default)(this, KamiCore);\n\n        if (!grids || !grids[0]) {\n            throw new Error('please use correct grids');\n        }\n\n        this._originGrids = grids;\n        this._canvas = canvas;\n        this.colors = colors;\n        this.lines = lines;\n        initData.call(this);\n    }\n\n    (0, _createClass3.default)(KamiCore, [{\n        key: 'tap',\n\n\n        // 触发某节点的改变\n        value: function tap(node, targetType) {\n            var _this = this;\n\n            var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n                delay = _ref2.delay,\n                onEnd = _ref2.onEnd;\n\n            var originalType = node.type;\n            if (targetType === originalType) return;\n\n            this._tapCount++;\n            var traveledNodes = new _weakSet2.default(); // 已遍历过的节点\n            var nodes = new _set2.default([node]); // 需要处理的当前层节点\n\n            // 以BFS算法遍历各节点进行处理\n            var spread = function spread() {\n                var nextNodes = new _set2.default();\n                nodes.forEach(function (node) {\n                    traveledNodes.add(node);\n                    node.type = targetType;\n                    _this._inBrowser && _this.setStyles({ node: node });\n                    var _iteratorNormalCompletion = true;\n                    var _didIteratorError = false;\n                    var _iteratorError = undefined;\n\n                    try {\n                        for (var _iterator = (0, _getIterator3.default)(node._linkNodes), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                            var linkNode = _step.value;\n\n                            if (!traveledNodes.has(linkNode) && linkNode.type === originalType) {\n                                nextNodes.add(linkNode);\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion && _iterator.return) {\n                                _iterator.return();\n                            }\n                        } finally {\n                            if (_didIteratorError) {\n                                throw _iteratorError;\n                            }\n                        }\n                    }\n                });\n                nodes = nextNodes;\n                if (nodes.size) {\n                    if (delay) {\n                        delay = delay / 10 * 9;\n                        _this._inBrowser && _this.render();\n                        setTimeout(spread, delay);\n                    } else {\n                        spread();\n                    }\n                } else {\n                    _this._inBrowser && _this.render();\n                    onEnd && onEnd({\n                        result: _this.checkConsistency(),\n                        tapCount: _this._tapCount\n                    });\n                }\n            };\n            spread();\n        }\n    }, {\n        key: 'singleTap',\n        value: function singleTap(node, nodeType) {\n            node.type = nodeType;\n            if (this._inBrowser) {\n                this.setStyles({ node: node });\n                this.render();\n            }\n        }\n    }, {\n        key: 'getGrids',\n        value: function getGrids() {\n            return this.nodeGrids.map(function (arr) {\n                return arr.map(function (node) {\n                    return node.type;\n                });\n            });\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            initData.call(this);\n        }\n\n        // 检查结果\n\n    }, {\n        key: 'checkConsistency',\n        value: function checkConsistency() {\n            var type = void 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = (0, _getIterator3.default)(this.nodeGrids), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var row = _step2.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = (0, _getIterator3.default)(row), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var node = _step3.value;\n\n                            if (!type) type = node.type;\n                            if (node.type && node.type !== type) return false;\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return true;\n        }\n    }]);\n    return KamiCore;\n}(), _class.defaultLines = _config.defaultLines, _class.defaultColors = _config.defaultColors, _temp);\nexports.default = KamiCore;\n\n\nmodule.exports = KamiCore;\n\n/***/ })\n\n},[65]);\n\n\n// WEBPACK FOOTER //\n// main.da38231f57953578359f.js","export default class Node {\r\n    constructor (type) {\r\n        this.type = type;\r\n        this.color = '';\r\n        this.line = '';\r\n        this._linkNodes = new Set();\r\n    }\r\n\r\n    link (...nodes) {\r\n        if (!this.type) return;\r\n        nodes.filter(node => node && node instanceof Node && node.type).forEach(node => {\r\n            if (this._linkNodes.has(node)) return; // if node already linked, do nothing\r\n            this._linkNodes.add(node);\r\n            node._linkNodes.add(this);\r\n        });\r\n    }\r\n\r\n    unlink (...nodes) {\r\n        nodes.filter(node => node && node instanceof Node && node.type).forEach(node => {\r\n            this._linkNodes.delete(node);\r\n            node._linkNodes.delete(this);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/kami/node.js","export const defaultLines = {\r\n    '1': 'rgba(156,50,72,.4)',\r\n    '2': 'rgba(138,197,167,.4)',\r\n    '3': 'rgba(197,123,50,.4)',\r\n    '4': 'rgba(24,52,64,.4)',\r\n    '5': 'rgba(203,102,60,.4)',\r\n    '6': 'rgba(202,192,164,.4)',\r\n};\r\n\r\nexport const defaultColors = {\r\n    '1': 'rgba(156,50,72,1)',\r\n    '2': 'rgba(138,197,167,1)',\r\n    '3': 'rgba(197,123,50,1)',\r\n    '4': 'rgba(24,52,64,1)',\r\n    '5': 'rgba(203,102,60,1)',\r\n    '6': 'rgba(202,192,164,1)',\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/kami/config.js","\r\nexport default   [\r\n    // { // 0\r\n    //     grids: [\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    //     ],\r\n    //     limit: 1,\r\n    // },\r\n    { // 1\r\n        grids: [\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],\r\n            [1, 1, 1, 2, 2, 2, 2, 1, 1, 1],\r\n            [1, 1, 2, 2, 3, 3, 2, 2, 1, 1],\r\n            [1, 2, 2, 3, 3, 3, 3, 2, 2, 1],\r\n            [1, 2, 3, 3, 2, 2, 3, 3, 2, 1],\r\n            [1, 2, 3, 2, 2, 2, 2, 3, 2, 1],\r\n            [1, 2, 3, 2, 1, 1, 2, 3, 2, 1],\r\n            [1, 2, 3, 2, 1, 1, 2, 3, 2, 1],\r\n            [1, 2, 3, 2, 1, 1, 2, 3, 2, 1],\r\n            [1, 2, 3, 2, 2, 2, 2, 3, 2, 1],\r\n            [1, 2, 3, 3, 2, 2, 3, 3, 2, 1],\r\n            [1, 2, 2, 3, 3, 3, 3, 2, 2, 1],\r\n            [1, 1, 2, 2, 3, 3, 2, 2, 1, 1],\r\n            [1, 1, 1, 2, 2, 2, 2, 1, 1, 1],\r\n            [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 3, 3, 1, 1],\r\n            [1, 2, 2, 1, 1, 3, 3, 3, 3, 1],\r\n            [1, 2, 2, 1, 1, 3, 2, 2, 3, 1],\r\n            [1, 2, 2, 1, 1, 3, 2, 2, 3, 1],\r\n            [1, 1, 1, 1, 1, 3, 2, 2, 3, 1],\r\n            [1, 1, 1, 1, 1, 3, 3, 3, 3, 1],\r\n            [1, 1, 1, 1, 1, 1, 3, 3, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n        ],\r\n        limit: 4,\r\n        styles: {\r\n            colors: {\r\n                '1': 'rgba(152,52,61,1)',\r\n                '2': 'rgba(91,143,116,1)',\r\n                '3': 'rgba(201,184,158,1)',\r\n            },\r\n            lines: {\r\n                '1': 'rgba(152,52,61,.4)',\r\n                '2': 'rgba(91,143,116,.4)',\r\n                '3': 'rgba(201,184,158,.4)',\r\n            },\r\n        },\r\n    },\r\n    { // 2\r\n        grids: [\r\n            [1, 2, 2, 3, 1, 1, 2, 2, 3, 1],\r\n            [1, 2, 2, 3, 1, 1, 2, 2, 3, 1],\r\n            [1, 2, 2, 3, 1, 1, 3, 2, 3, 1],\r\n            [1, 3, 2, 3, 1, 1, 3, 3, 3, 1],\r\n            [1, 3, 3, 3, 1, 1, 3, 3, 3, 1],\r\n            [1, 3, 3, 3, 1, 1, 3, 2, 3, 1],\r\n            [4, 3, 3, 3, 1, 1, 3, 2, 2, 1],\r\n            [4, 4, 3, 3, 1, 1, 3, 2, 2, 1],\r\n            [1, 4, 4, 3, 1, 1, 3, 2, 2, 1],\r\n            [1, 2, 4, 4, 1, 1, 3, 3, 2, 1],\r\n            [1, 2, 2, 4, 4, 1, 3, 3, 3, 1],\r\n            [1, 2, 2, 3, 4, 4, 3, 3, 3, 1],\r\n            [4, 2, 2, 3, 1, 4, 2, 3, 3, 1],\r\n            [4, 4, 2, 3, 1, 1, 2, 2, 3, 1],\r\n            [2, 4, 3, 3, 1, 1, 2, 2, 3, 1],\r\n            [2, 3, 3, 3, 1, 1, 2, 2, 3, 4],\r\n            [2, 3, 3, 3, 2, 1, 3, 2, 3, 4],\r\n            [2, 2, 3, 3, 2, 4, 3, 3, 3, 1],\r\n            [1, 2, 2, 3, 2, 4, 4, 3, 3, 1],\r\n            [1, 2, 2, 3, 2, 2, 4, 2, 3, 1],\r\n            [1, 2, 2, 3, 2, 2, 2, 2, 4, 1],\r\n            [1, 3, 2, 3, 2, 2, 2, 2, 4, 4],\r\n            [1, 3, 3, 3, 1, 2, 2, 2, 2, 4],\r\n            [1, 3, 3, 3, 1, 1, 2, 2, 2, 2],\r\n            [1, 3, 2, 3, 1, 1, 3, 2, 2, 2],\r\n            [1, 3, 2, 2, 1, 1, 3, 3, 2, 2],\r\n            [1, 3, 2, 2, 1, 1, 3, 3, 3, 2],\r\n            [1, 3, 2, 2, 1, 1, 3, 3, 3, 4],\r\n            [1, 3, 3, 2, 1, 1, 3, 3, 3, 4],\r\n        ],\r\n        limit: 5,\r\n        styles: {\r\n            colors: {\r\n                '1': 'rgba(209,197,171,1)',\r\n                '2': 'rgba(205,104,62,1)',\r\n                '3': 'rgba(37,60,66,1)',\r\n                '4': 'rgba(88,172,156,1)',\r\n            },\r\n            lines: {\r\n                '1': 'rgba(209,197,171,.4)',\r\n                '2': 'rgba(205,104,62,.4)',\r\n                '3': 'rgba(37,60,66,.4)',\r\n                '4': 'rgba(88,172,156,.4)',\r\n            },\r\n        },\r\n    },\r\n    { // 3\r\n        grids: [\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 2, 1, 1],\r\n            [1, 3, 1, 1, 1, 1, 2, 2, 1, 1],\r\n            [1, 3, 3, 1, 1, 2, 2, 2, 1, 1],\r\n            [1, 3, 3, 3, 1, 1, 2, 2, 1, 1],\r\n            [1, 3, 1, 3, 3, 1, 1, 2, 1, 1],\r\n            [1, 3, 1, 1, 3, 3, 1, 1, 1, 1],\r\n            [1, 3, 1, 1, 1, 3, 3, 1, 1, 1],\r\n            [1, 3, 1, 4, 1, 1, 3, 3, 1, 1],\r\n            [1, 3, 1, 2, 4, 1, 1, 3, 3, 1],\r\n            [1, 3, 1, 4, 1, 1, 3, 3, 1, 1],\r\n            [1, 3, 1, 1, 1, 3, 3, 1, 1, 1],\r\n            [1, 3, 1, 1, 3, 3, 1, 1, 4, 1],\r\n            [1, 3, 1, 3, 3, 1, 1, 4, 4, 1],\r\n            [1, 3, 3, 3, 1, 1, 4, 1, 4, 1],\r\n            [1, 3, 3, 1, 1, 4, 4, 1, 1, 1],\r\n            [1, 3, 1, 1, 4, 4, 1, 1, 4, 1],\r\n            [1, 1, 1, 4, 1, 1, 3, 1, 4, 1],\r\n            [1, 1, 4, 4, 1, 1, 4, 3, 4, 1],\r\n            [1, 1, 1, 4, 1, 1, 3, 1, 4, 1],\r\n            [1, 1, 1, 1, 4, 4, 1, 1, 4, 1],\r\n            [1, 1, 3, 1, 1, 4, 4, 1, 1, 1],\r\n            [1, 1, 1, 3, 1, 1, 4, 1, 4, 1],\r\n            [1, 1, 3, 1, 1, 1, 1, 4, 4, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 4, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n        ],\r\n        limit: 5,\r\n        styles: {\r\n            colors: {\r\n                '1': 'rgba(64,132,109,1)',\r\n                '2': 'rgba(207,167,69,1)',\r\n                '3': 'rgba(209,110,53,1)',\r\n                '4': 'rgba(37,63,89,1)',\r\n            },\r\n            lines: {\r\n                '1': 'rgba(64,132,109,.4)',\r\n                '2': 'rgba(207,167,69,.4)',\r\n                '3': 'rgba(209,110,53,.4)',\r\n                '4': 'rgba(37,63,89,.4)',\r\n            },\r\n        },\r\n    },\r\n    { // 4\r\n        grids: [\r\n            [2, 2, 3, 1, 4, 4, 1, 3, 3, 3],\r\n            [2, 2, 3, 1, 4, 4, 1, 3, 3, 3],\r\n            [3, 3, 3, 1, 1, 1, 1, 3, 3, 3],\r\n            [3, 3, 4, 4, 1, 1, 2, 2, 3, 3],\r\n            [1, 4, 4, 4, 4, 2, 2, 2, 2, 1],\r\n            [1, 4, 4, 4, 4, 2, 3, 3, 2, 1],\r\n            [1, 4, 4, 4, 4, 2, 3, 3, 2, 1],\r\n            [1, 4, 4, 4, 4, 2, 3, 3, 2, 1],\r\n            [1, 4, 4, 4, 4, 2, 2, 2, 2, 1],\r\n            [3, 3, 4, 4, 1, 1, 2, 2, 1, 1],\r\n            [3, 3, 3, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 3, 1, 3, 3, 1, 1, 1, 1],\r\n            [1, 1, 3, 1, 3, 3, 1, 1, 1, 1],\r\n            [1, 1, 3, 1, 3, 3, 1, 1, 1, 1],\r\n            [3, 3, 3, 1, 1, 1, 1, 1, 1, 1],\r\n            [3, 3, 2, 2, 1, 1, 1, 1, 1, 1],\r\n            [1, 2, 2, 2, 2, 1, 1, 1, 1, 4],\r\n            [1, 2, 3, 3, 2, 1, 2, 2, 1, 4],\r\n            [1, 2, 3, 3, 2, 1, 2, 2, 1, 4],\r\n            [1, 2, 3, 3, 2, 1, 2, 2, 1, 4],\r\n            [1, 2, 2, 2, 2, 1, 1, 1, 1, 4],\r\n            [1, 1, 2, 2, 3, 3, 1, 1, 1, 1],\r\n            [1, 1, 1, 3, 3, 3, 3, 1, 1, 1],\r\n            [2, 2, 1, 3, 4, 4, 3, 1, 3, 3],\r\n            [2, 2, 1, 3, 4, 4, 3, 1, 3, 3],\r\n            [2, 2, 1, 3, 4, 4, 3, 1, 3, 3],\r\n            [1, 1, 1, 3, 3, 3, 3, 1, 1, 1],\r\n            [1, 1, 1, 1, 3, 3, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n        ],\r\n        limit: 5,\r\n        styles: {\r\n            colors: {\r\n                '1': 'rgba(22,50,62,1)',\r\n                '2': 'rgba(137,196,166,1)',\r\n                '3': 'rgba(200,126,53,1)',\r\n                '4': 'rgba(154,48,70,1)',\r\n            },\r\n            lines: {\r\n                '1': 'rgba(22,50,62,.4)',\r\n                '2': 'rgba(137,196,166,.4)',\r\n                '3': 'rgba(200,126,53,.4)',\r\n                '4': 'rgba(154,48,70,.4)',\r\n            },\r\n        },\r\n    },\r\n]\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/example/grids.js","// const Kami = require('../kami');\r\nimport Kami from '../kami';\r\nimport gridsData from './grids';\r\n\r\nlet gridsIndex = 0;\r\n\r\nfunction initPage () {\r\n    const { grids, limit, styles = {} } = gridsData[gridsIndex];\r\n    const kami = new Kami({\r\n        grids,\r\n        colors: styles.colors,\r\n        lines: styles.lines,\r\n    });\r\n    const canvasContainerEl = document.querySelector('#canvas-wrapper');\r\n    const colorsContainerEl = document.querySelector('#colors-wrapper');\r\n    const tipContainerEl = document.querySelector('#tips-wrapper');\r\n\r\n    canvasContainerEl.innerHTML = `<canvas class=\"canvas\" width=\"300\" height=\"500\"></canvas>`;\r\n\r\n    colorsContainerEl.innerHTML = '';\r\n    kami.types.forEach(type => {\r\n        colorsContainerEl.innerHTML +=\r\n            `<span\r\n            data-type=\"${type}\" \r\n            class=\"color\"\r\n            style=\"background: ${kami.colors[type]}; border: 3px solid ${kami.lines[type]}\"\r\n        ></span>`\r\n    });\r\n\r\n    tipContainerEl.innerHTML = `<div>请在${limit}步之内完成</div>`;\r\n\r\n    let curType;\r\n    let colorsEl = [].slice.call(colorsContainerEl.querySelectorAll('[data-type]'));\r\n    colorsEl.forEach(el => {\r\n        el.addEventListener('click', function (e) {\r\n            colorsEl.forEach(el => {\r\n                el.classList.remove('selected');\r\n            });\r\n            this.classList.add('selected');\r\n            curType = +this.dataset.type;\r\n        });\r\n    });\r\n    colorsContainerEl.querySelector('[data-type]').click();\r\n\r\n\r\n    const canvasEl = canvasContainerEl.querySelector('canvas');\r\n\r\n    canvasEl.addEventListener('click', e => {\r\n        let node = kami.getNodeByOffset(e.offsetX / canvasEl.offsetWidth, e.offsetY / canvasEl.offsetHeight);\r\n\r\n        kami.tap(node, curType, {\r\n            onEnd ({ result, tapCount }) {\r\n                if (result) {\r\n                    gridsIndex++;\r\n                    if (gridsIndex >= gridsData.length) {\r\n                        setTimeout(() => {\r\n                            alert(`已通过所有关卡~！`);\r\n                        }, 50);\r\n                        return;\r\n                    }\r\n                    setTimeout(() => {\r\n                        alert(`通过~！（当前进度：${gridsIndex}/${gridsData.length}）`);\r\n                    }, 50);\r\n                    initPage();\r\n                } else if (tapCount >= limit) {\r\n                    setTimeout(() => {\r\n                        alert(`失败...别灰心，再试一下`);\r\n                    }, 50);\r\n                    kami.reset();\r\n                }\r\n            },\r\n            delay: 100,\r\n        });\r\n    });\r\n\r\n    kami.mount(canvasEl);\r\n}\r\n\r\ninitPage();\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/example/index.js","import Kami from './kami-extend';\r\n\r\nexport default Kami;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/kami/index.js","import KamiCore from './kami-core';\r\n\r\nexport default class Kami extends KamiCore {\r\n    // 挂载到canvas并自动渲染\r\n    mount (\r\n        canvas,\r\n        {\r\n            colors,\r\n            lines,\r\n        } = {}) {\r\n        this._inBrowser = true;\r\n        this._canvas = canvas;\r\n        colors = colors || this.colors || Kami.defaultColors;\r\n        lines = lines || this.lines || Kami.defaultLines;\r\n        this.setStyles({ colors, lines });\r\n        this.render();\r\n    }\r\n\r\n    // 改变节点样式\r\n    setStyles ({ node, colors, lines }) {\r\n        this.colors = colors || this.colors;\r\n        this.lines = lines || this.lines;\r\n        if (node) {\r\n            node.color = this.colors[node.type] || '';\r\n            node.line = typeof this.lines === 'object' ? this.lines[node.type] : (node.type ? this.lines : '');\r\n        } else {\r\n            this.nodeGrids.forEach(row => {\r\n                row.forEach(node => {\r\n                    node.color = this.colors[node.type] || '';\r\n                    node.line = typeof this.lines === 'object' ? this.lines[node.type] : (node.type ? this.lines : '');\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // 渲染到canvas\r\n    render () {\r\n        if (!this._canvas) return;\r\n        const { nodeGrids, _canvas } = this;\r\n\r\n        const canvasWidth = _canvas.width;\r\n        const canvasHeight = _canvas.height;\r\n        const ctx = _canvas.getContext('2d');\r\n        const gridXLen = nodeGrids[0].length;\r\n        const gridYLen = nodeGrids.length;\r\n        const nodeWidth = canvasWidth / gridXLen;\r\n        const nodeHeight = canvasHeight / ((gridYLen -1) / 2) / 2;\r\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        nodeGrids.forEach((rowData, y) => {\r\n            rowData.forEach((node, x) => {\r\n                let reverse = (x + y) & 1;\r\n                ctx.beginPath();\r\n                if (!reverse) {\r\n                    ctx.moveTo(nodeWidth * x, nodeHeight * (y - 1));\r\n                    ctx.lineTo(nodeWidth * (x + 1), nodeHeight * y);\r\n                    ctx.lineTo(nodeWidth * x, nodeHeight * (y + 1));\r\n                    ctx.lineTo(nodeWidth * x, nodeHeight * (y - 1));\r\n                } else {\r\n                    ctx.moveTo(nodeWidth * x, nodeHeight * y);\r\n                    ctx.lineTo(nodeWidth * (x + 1), nodeHeight * (y - 1));\r\n                    ctx.lineTo(nodeWidth * (x + 1), nodeHeight * (y + 1));\r\n                    ctx.lineTo(nodeWidth * x, nodeHeight * y);\r\n                }\r\n\r\n                ctx.fillStyle = node.color;\r\n                node.color && ctx.fill();\r\n                ctx.strokeStyle = node.line;\r\n                node.line && ctx.stroke();\r\n                ctx.closePath();\r\n            });\r\n        });\r\n    }\r\n\r\n    // 根据坐标获取节点\r\n    getNodeByOffset (percentX, percentY) {\r\n        const areaWidth = 1 / this.nodeGrids[0].length;\r\n        const areaHeight = (1 / ((this.nodeGrids.length - 1)));\r\n\r\n        let areaX = percentX / areaWidth | 0;\r\n        let areaOffsetXPercent = percentX / areaWidth - areaX;\r\n        let areaY = percentY / areaHeight | 0;\r\n        let areaOffsetYPercent = 1 - (percentY / areaHeight - areaY);\r\n\r\n        let isUpHalf = (areaX + areaY) & 1 ? (1 - areaOffsetXPercent) < areaOffsetYPercent : areaOffsetXPercent < areaOffsetYPercent;\r\n\r\n        let x = areaX;\r\n        let y = isUpHalf ? areaY : areaY + 1;\r\n        return this.nodeGrids[y][x];\r\n    }\r\n}\r\n\r\nmodule.exports = Kami;\n\n\n// WEBPACK FOOTER //\n// ./src/kami/kami-extend.js","import Node from './node';\r\nimport { defaultLines, defaultColors } from './config';\r\n\r\nfunction initData () {\r\n    const nodeTypeMap = {};\r\n    const nodeGrids = this._originGrids.map(row => row.map(nodeType => {\r\n        nodeTypeMap[nodeType] = true;\r\n        return new Node(nodeType);\r\n    }));\r\n\r\n    Object.defineProperties(nodeGrids, {\r\n        getNode: {\r\n            value (x, y) {\r\n                return this[y] && this[y][x] || null;\r\n            },\r\n            enumerable: false,\r\n        }\r\n    });\r\n\r\n    // 处理各节点的链接关系\r\n    nodeGrids.forEach((row, y) => {\r\n        row.forEach((node, x) => {\r\n            node.link(nodeGrids.getNode(x, y - 1), nodeGrids.getNode(x, y + 1), nodeGrids.getNode(x + ((x + y) & 1 ? 1 : -1), y));\r\n        });\r\n    });\r\n\r\n    this.nodeGrids = nodeGrids;\r\n    this._tapCount = 0;\r\n    this.types = Object.keys(nodeTypeMap).map(typeStr => +typeStr).filter(type => type);\r\n\r\n    if (this._canvas) {\r\n        typeof this.mount === 'function' && this.mount(this._canvas);\r\n    }\r\n}\r\n\r\nexport default class KamiCore {\r\n    constructor ({\r\n                     canvas = null,\r\n                     grids,\r\n                     colors = KamiCore.defaultColors,\r\n                     lines = KamiCore.defaultLines,\r\n                 } = {}) {\r\n        if (!grids || !grids[0]) {\r\n            throw new Error('please use correct grids');\r\n        }\r\n\r\n        this._originGrids = grids;\r\n        this._canvas = canvas;\r\n        this.colors = colors;\r\n        this.lines = lines;\r\n        initData.call(this);\r\n    }\r\n\r\n    static defaultLines = defaultLines;\r\n    static defaultColors = defaultColors;\r\n\r\n    // 触发某节点的改变\r\n    tap (node, targetType, { delay, onEnd } = {}) {\r\n        const originalType = node.type;\r\n        if (targetType === originalType) return;\r\n\r\n        this._tapCount++;\r\n        let traveledNodes = new WeakSet();　// 已遍历过的节点\r\n        let nodes = new Set([node]);　// 需要处理的当前层节点\r\n\r\n        // 以BFS算法遍历各节点进行处理\r\n        const spread = () => {\r\n            let nextNodes = new Set();\r\n            nodes.forEach(node => {\r\n                traveledNodes.add(node);\r\n                node.type = targetType;\r\n                this._inBrowser && this.setStyles({ node });\r\n                for (let linkNode of node._linkNodes) {\r\n                    if (!traveledNodes.has(linkNode) && linkNode.type === originalType) {\r\n                        nextNodes.add(linkNode);\r\n                    }\r\n                }\r\n            });\r\n            nodes = nextNodes;\r\n            if (nodes.size) {\r\n                if (delay) {\r\n                    delay = delay / 10 * 9;\r\n                    this._inBrowser && this.render();\r\n                    setTimeout(spread, delay);\r\n                } else {\r\n                    spread();\r\n                }\r\n            } else {\r\n                this._inBrowser && this.render();\r\n                onEnd && onEnd({\r\n                    result: this.checkConsistency(),\r\n                    tapCount: this._tapCount,\r\n                });\r\n            }\r\n        };\r\n        spread();\r\n    }\r\n\r\n    singleTap (node, nodeType) {\r\n        node.type = nodeType;\r\n        if (this._inBrowser) {\r\n            this.setStyles({ node });\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    getGrids () {\r\n        return this.nodeGrids.map(arr => arr.map(node => node.type));\r\n    }\r\n\r\n    reset () {\r\n        initData.call(this);\r\n    }\r\n\r\n    // 检查结果\r\n    checkConsistency () {\r\n        let type;\r\n        for (let row of this.nodeGrids) {\r\n            for (let node of row) {\r\n                if (!type) type = node.type;\r\n                if (node.type && node.type !== type) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nmodule.exports = KamiCore;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/kami/kami-core.js"],"sourceRoot":""}